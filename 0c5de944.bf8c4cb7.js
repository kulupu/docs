(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{63:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return u})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return p}));var r=t(3),i=t(7),o=(t(0),t(85)),a={title:"Mining"},u={unversionedId:"guide/mining",id:"guide/mining",isDocsHomePage:!1,title:"Mining",description:"This article is a simple guide on how to get started mining Kulupu.",source:"@site/docs/guide/mining.md",slug:"/guide/mining",permalink:"/docs/guide/mining",editUrl:"https://github.com/kulupu/docs/edit/master/website/docs/guide/mining.md",version:"current",sidebar:"someSidebar",previous:{title:"Grand View Garden",permalink:"/docs/runtime/grand-view-garden"},next:{title:"Wallet",permalink:"/docs/guide/wallet"}},l=[{value:"Import or generate a mining key",id:"import-or-generate-a-mining-key",children:[]},{value:"Pass author argument to node for mining",id:"pass-author-argument-to-node-for-mining",children:[]},{value:"Troubleshotting",id:"troubleshotting",children:[{value:"Expected pruning mode",id:"expected-pruning-mode",children:[]},{value:"Unable to mine",id:"unable-to-mine",children:[]},{value:"Custom base path",id:"custom-base-path",children:[]},{value:"Node killed",id:"node-killed",children:[]},{value:"Warnings that can be ignored",id:"warnings-that-can-be-ignored",children:[]}]}],c={toc:l};function p(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This article is a simple guide on how to get started mining Kulupu."),Object(o.b)("h2",{id:"import-or-generate-a-mining-key"},"Import or generate a mining key"),Object(o.b)("p",null,"Kulupu implements signed mining. To mine Kulupu blocks, you have to\nhave the coinbase private key stored in the mining software, as a new\nsignature is produced for every new nonce. We refer to the private key\nfor signed mining as the ",Object(o.b)("strong",{parentName:"p"},"mining key"),"."),Object(o.b)("p",null,"The eaiest way to get a mining key is to generate a new one using the\n",Object(o.b)("inlineCode",{parentName:"p"},"generate-mining-key")," command:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"kulupu generate-mining-key\n")),Object(o.b)("p",null,"Keep your secret seed in a secure place."),Object(o.b)("p",null,"Alternatively, you can also import an existing private key as the\nmining key, using the ",Object(o.b)("inlineCode",{parentName:"p"},"import-mining-key")," command:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'kulupu import-mining-key "<secret seed>"\n')),Object(o.b)("h2",{id:"pass-author-argument-to-node-for-mining"},"Pass author argument to node for mining"),Object(o.b)("p",null,"Remember either the public key or the address, and pass it to node for\nmining. For example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"kulupu --validator --author <coinbase public key>\n")),Object(o.b)("h2",{id:"troubleshotting"},"Troubleshotting"),Object(o.b)("h3",{id:"expected-pruning-mode"},"Expected pruning mode"),Object(o.b)("p",null,"If you encounter the following errors:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'Error: Service(Client(Msg("State database error: Expected pruning mode: constrained")))\n')),Object(o.b)("p",null,"It means you previously started the node without mining flag. By\ndefault, the node would execute under pruning mode which currently\ncannot be used for mining."),Object(o.b)("p",null,"To fix it, run the following command and then restart your mining\nnode."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"kulupu purge-chain\n")),Object(o.b)("h3",{id:"unable-to-mine"},"Unable to mine"),Object(o.b)("p",null,'If you see any of the "unable to mine" errors in the log, please\nensure that you have started the mining node with approriate\n',Object(o.b)("inlineCode",{parentName:"p"},"--author")," flag and have imported your mining key."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'"Unable to mine: pre-digest not set" means the ',Object(o.b)("inlineCode",{parentName:"li"},"--author")," flag is\nmissing from the command-line."),Object(o.b)("li",{parentName:"ul"},'"Unable to mine: fetch pair from author failed" means the mining key\nhas not been imported. Please refer to "import or generate a mining\nkey" section to get the mining key to the node.')),Object(o.b)("h3",{id:"custom-base-path"},"Custom base path"),Object(o.b)("p",null,"If you use a custom base path through the ",Object(o.b)("inlineCode",{parentName:"p"},"--base-path")," or ",Object(o.b)("inlineCode",{parentName:"p"},"-d")," flag,\nwhen importing the mining key, the flag should also be present for the\nkeystore import to obtain the correct path."),Object(o.b)("h3",{id:"node-killed"},"Node killed"),Object(o.b)("p",null,"If you see your node about to generate the RandomX cache and getting\nkilled, it is due to the machine not having enough memory. You can get\nthe mining routine running by setting up swap memory (Linux) or\nvirtual memory (Windows). However, do note that if you do this, the\nmining will be done with degraded performance."),Object(o.b)("h3",{id:"warnings-that-can-be-ignored"},"Warnings that can be ignored"),Object(o.b)("p",null,"If you encountered the following warnings, they are normal and can be\nignored:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},'"Ran out of free WASM instances" means it is generating new WASM\ninstances.'),Object(o.b)("li",{parentName:"ul"},'"This peer ID uses a legacy, deprecated representation" can be\nignored. You can also attempt to fix it by completely remove the\ndata store and restart the node.')))}p.isMDXComponent=!0},85:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),p=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},d=function(e){var n=p(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,b=d["".concat(a,".").concat(m)]||d[m]||s[m]||o;return t?i.a.createElement(b,u(u({ref:n},c),{},{components:t})):i.a.createElement(b,u({ref:n},c))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u.mdxType="string"==typeof e?e:r,a[1]=u;for(var c=2;c<o;c++)a[c]=t[c];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);